name: build-and-test-deb (noble only)

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu:24.04
    steps:
      - uses: actions/checkout@v4

      - name: Install build deps
        run: |
          set -eux
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y --no-install-recommends \
            ca-certificates git curl pkg-config \
            build-essential cmake \
            libgdal-dev \
            file dpkg-dev
          update-ca-certificates
          git config --system http.sslCAinfo /etc/ssl/certs/ca-certificates.crt
          # sanity checks
          gdal-config --version
          pkg-config --modversion gdal

      - name: Configure (C++20; disable tests in CI)
        run: |
          set -eux
          cmake -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTING=OFF \
            -DGDAL_USE_STATIC_LIBS=OFF

      - name: Build
        run: cmake --build build -j"$(nproc)"

      - name: Package (.deb via CPack)
        run: |
          cpack -B build/dist -G DEB --config build/CPackConfig.cmake
          ls -l build/dist

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: opendsas-noble
          path: build/dist/*.deb

  test-install:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download .deb
        uses: actions/download-artifact@v4
        with:
          name: opendsas-noble
          path: dist

      - name: Show downloaded files
        run: ls -lah dist

      - name: Test install inside clean noble
        run: |
          docker run --rm -v "$PWD/dist:/pkg:ro" ubuntu:24.04 bash -lc '
            set -euo pipefail
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get install -y /pkg/*.deb
            command -v dsas
            dsas --version
            dsas --help >/dev/null
            ldd "$(command -v dsas)"
          '

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    needs: [build, test-install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: opendsas-noble
          path: dist
      - uses: softprops/action-gh-release@v2
        with:
          files: dist/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
